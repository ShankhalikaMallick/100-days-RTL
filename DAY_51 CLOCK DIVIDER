RTL:
`timescale 1ns / 1ps
//Date : 25/04/2025
//Name : Shankhalika Mallick

// DAY-51 CLOCK DIVIDER

module CLK_DIVIDER(clk1,rst,clk);
input clk1,rst;
reg [1:0] clk2;
output clk;
// initial clock= clk1
// new variable= clk2
// output clock= MSB of clk2= clk 

assign clk=clk2[1];
always @(posedge clk1 or posedge rst)
begin
    if (rst==1)
    clk2=2'b0;
    else 
    clk2<=clk2+1'b1;
end
endmodule

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

TESTBENCH:

`timescale 1ns/1ps
`include "CLK_DIVIDER.v"

module CLK_TB();
reg clk1,rst;
wire clk;
CLK_DIVIDER ob(clk1,rst,clk);
initial 
begin
    rst=1;
    clk1=0;
    #10; rst=0;    
end
always begin
 #5; clk1=~clk1;
end
initial 
begin
    $dumpfile("clockdiv.vcd");
    $dumpvars (0,CLK_TB);
    $display("clk1\t clk");
    $monitor("%d\t%d",clk1,clk);

    #100; $finish; 
end
endmodule

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

OUTPUT:
[Running] CLK_TB.v
VCD info: dumpfile clockdiv.vcd opened for output.
clk1	 clk
0	  0
1	  0
0	  0
1	  0
0	  0
1	  1
0	  1
1	  1
0	  1
1	  0  
0	  0
1	  0
0	  0
1	  1
0	  1
1	  1
0	  1
1	  0
0	  0  
1	  0
CLK_TB.v:24: $finish called at 100000 (1ps)
0	  0
[Done] exit with code=0 in 0.146 seconds

